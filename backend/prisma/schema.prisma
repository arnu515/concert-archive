// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider             = "prisma-client-py"
  recursive_type_depth = 5
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Users {
  id          String   @id @default(cuid()) @map("_id")
  email       String   @unique
  username    String
  avatar_url  String
  provider    String
  provider_id String
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  RefreshTokens RefreshTokens[]
  OAuthCodes    OAuthCodes[]
  Stages        Stages[]
  Invites       Invites[]

  @@map("users")
}

model OAuthStates {
  state      String   @id @map("_id")
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("oauth_states")
}

model OAuthCodes {
  code       String   @id @default(cuid()) @map("_id")
  user_id    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user Users @relation(fields: [user_id], references: [id])

  @@map("oauth_codes")
}

model RefreshTokens {
  token      String   @id @default(cuid()) @map("_id")
  user_id    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  user Users @relation(fields: [user_id], references: [id])

  @@map("refresh_tokens")
}

model Stages {
  id         String   @id @default(cuid()) @map("_id")
  name       String
  password   String?
  private    Boolean  @default(false)
  color      String   @default("#00A9A5")
  owner_id   String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  owner   Users     @relation(fields: [owner_id], references: [id])
  Invites Invites[]

  @@map("stages")
}

model Invites {
  id       String @id @default(cuid()) @map("_id")
  stage_id String
  user_id  String

  stage Stages @relation(fields: [stage_id], references: [id])
  user  Users  @relation(fields: [stage_id], references: [id])
}
